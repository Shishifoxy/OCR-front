{"ast":null,"code":"import { ChangeDetectorRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CountryService } from 'src/app/core/service/country.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/core/service/country.service\";\nimport * as i3 from \"@swimlane/ngx-charts\";\nexport let DetailsPageComponent = /*#__PURE__*/(() => {\n  class DetailsPageComponent {\n    constructor(route, countryService, cdr, router) {\n      this.route = route;\n      this.countryService = countryService;\n      this.cdr = cdr;\n      this.router = router;\n      this.medalsData = [];\n      this.view = [700, 400];\n      this.xAxisLabel = 'Année';\n      this.yAxisLabel = 'Nombre de médailles';\n      this.colorScheme = {\n        domain: ['#5AA454', '#A10A28', '#C7B42C', '#AAAAAA']\n      };\n      this.scaleType = 'linear';\n      this.legend = true;\n      this.showXAxisLabel = true;\n      this.showYAxisLabel = true;\n      this.xAxis = true;\n      this.yAxis = true;\n    }\n    ngOnInit() {\n      this.countryId = +this.route.snapshot.paramMap.get('id');\n      console.log('countryId' + this.countryId);\n      let countryName;\n      this.countryService.getCountries().subscribe(countries => {\n        const country = countries.find(c => c.id === this.countryId);\n        if (country) {\n          countryName = country.country;\n          this.countryService.getMedalsByCountry(countryName).subscribe(data => {\n            const participations = data.map(participation => ({\n              name: participation.year,\n              value: participation.medalsCount\n            }));\n            this.medalsData = [{\n              name: countryName,\n              series: participations\n            }];\n            //nombre de participations au jos pour le pays trouvé avec l'id\n            this.nbparticipations = countries.find(c => c.id === this.countryId).participations.length;\n            //nombre de médailles totales obtenues au jos pour le pays trouvé avec l'id\n            this.nbMedals = countries.find(c => c.id === this.countryId).participations.reduce((total, participation) => total + participation.medalsCount, 0);\n            //nombre d'athletes totales obtenues au jos pour le pays trouvé avec l'id\n            this.nbAthlete = countries.find(c => c.id === this.countryId).participations.reduce((total, participation) => total + participation.athleteCount, 0);\n            console.log('Medals Data:', this.medalsData);\n            this.cdr.detectChanges();\n          });\n        } else {\n          this.router.navigate(['/']);\n        }\n      });\n    }\n    static #_ = this.ɵfac = function DetailsPageComponent_Factory(t) {\n      return new (t || DetailsPageComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.CountryService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.Router));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DetailsPageComponent,\n      selectors: [[\"app-details-page\"]],\n      decls: 10,\n      vars: 13,\n      consts: [[1, \"container\"], [1, \"numbers-container\"], [1, \"chart-container\"], [3, \"view\", \"legend\", \"scheme\", \"showXAxisLabel\", \"showYAxisLabel\", \"xAxis\", \"yAxis\", \"xAxisLabel\", \"yAxisLabel\", \"results\"]],\n      template: function DetailsPageComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\");\n          i0.ɵɵtext(3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"div\");\n          i0.ɵɵtext(5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"div\");\n          i0.ɵɵtext(7);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(8, \"div\", 2);\n          i0.ɵɵelement(9, \"ngx-charts-line-chart\", 3);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate1(\"Nombre total de participations \", ctx.nbparticipations, \"\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\"Nombre total de m\\u00E9dailles \", ctx.nbMedals, \"\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\"Nombre total d'athl\\u00E8tes \", ctx.nbAthlete, \"\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"view\", ctx.view)(\"legend\", ctx.legend)(\"scheme\", ctx.colorScheme)(\"showXAxisLabel\", ctx.showXAxisLabel)(\"showYAxisLabel\", ctx.showYAxisLabel)(\"xAxis\", ctx.xAxis)(\"yAxis\", ctx.yAxis)(\"xAxisLabel\", ctx.xAxisLabel)(\"yAxisLabel\", ctx.yAxisLabel)(\"results\", ctx.medalsData);\n        }\n      },\n      dependencies: [i3.LineChartComponent],\n      styles: [\".container[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;justify-content:center;height:100vh;padding-left:20px;padding-right:20px}.numbers-container[_ngcontent-%COMP%]{display:flex}.numbers-container[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{flex:1}.chart-container[_ngcontent-%COMP%]{margin-top:20px;width:700px;height:400px}\"]\n    });\n  }\n  return DetailsPageComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}